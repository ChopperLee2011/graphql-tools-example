# Graphql: remote schema intro
#share






> It can be valuable to be able to treat remote GraphQL endpoints as if they were local executable schemas. This is especially useful for  [schema stitching](https://www.graphql-tools.com/docs/stitch-api/) , but there may be other use cases. 
https://www.graphql-tools.com/docs/remote-schemas




```
""""""""""""""""""                         """"""""""""""""""
 person-gql:3001                             team-gql:3002
""""""""""""""""""                         """""""""""""""""""
      |                                                                     |
      |                                                                     |
       -------------> api-gateway:4000  <------------            
```                        




```

""""""""""""""
remote schemas  --------------------------------           
""""""""""""""                                  |
                                                |
                                                |
""""""""""""""                                  |
linkTypeDefs   ----------------------------------          
""""""""""""""                                  |
                                                | ---> gateway
                                                |
""""""""""""""""""""""""""""                    |
resolves                     --------------------          
with delegateToSchema method
""""""""""""""""""""""""""""
```

## how to run:
1. make sure you build the dist files:  `npm run build`
2. start "microservice API": `node dist/remote-schema-stitching/team.js` and `node dist/remote-schema-stitching/person.js`
3. start API-gateway: `node node dist/remote-schema-stitching/index.js`

**tip** test, fragment